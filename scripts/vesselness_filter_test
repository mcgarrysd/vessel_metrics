#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Apr 11 10:42:42 2022

Vessel filter test

@author: sean
"""

import cv2
import matplotlib.pyplot as plt
import numpy as np
import vessel_metrics as vm
import glob, os
from cv2_rolling_ball import subtract_background_rolling_ball
from skimage.filters import meijering, hessian, frangi, sato
from skimage.morphology import skeletonize

data_path = '/home/sean/Documents/vm_manuscript/E1_combined/'

label_list = []
im_list = []
data_files = os.listdir(data_path)

for file in data_files:
    label_list.append(cv2.imread(data_path+file+'/label.png',0))
    im_list.append(cv2.imread(data_path+file+'/img.png',0))
    
# jerman_seg_list = []
# jerman_conn_list = []
# jerman_area_list = []
# jerman_length_list = []
# jerman_jacc_list = []
# for im, label in zip(im_list, label_list):
#     seg = brain_seg(label, filter = 'jerman')
#     jerman_seg_list.append(seg.astype(np.uint8))
    
#     length, area, conn = vm.cal(label.astype(np.uint8), seg.astype(np.uint8))
#     jerman_conn_list.append(conn)
#     jerman_area_list.append(area)
#     jerman_length_list.append(length)
#     jerman_jacc_list.append(vm.jaccard(label, seg))
    
    
    
meij_seg_list = []
meij_conn_list = []
meij_area_list = []
meij_length_list = []
meij_jacc_list = []
for im, label in zip(im_list, label_list):
    seg = brain_seg(label, filter == 'meijering')
    meij_seg_list.append(seg.astype(np.uint8))
    
    length, area, conn = vm.cal(label.astype(np.uint8), seg.astype(np.uint8))
    meij_conn_list.append(conn)
    meij_area_list.append(area)
    meij_length_list.append(length)
    meij_jacc_list.append(vm.jaccard(label, seg))
    
    
frangi_seg_list = []
frangi_conn_list = []
frangi_area_list = []
frangi_length_list = []
frangi_jacc_list = []
for im, label in zip(im_list, label_list):
    seg = brain_seg(label, filter = 'frangi', thresh = 10)
    frangi_seg_list.append(seg.astype(np.uint8))
    
    length, area, conn = vm.cal(label.astype(np.uint8), seg.astype(np.uint8))
    frangi_conn_list.append(conn)
    frangi_area_list.append(area)
    frangi_length_list.append(length)
    frangi_jacc_list.append(vm.jaccard(label, seg))
    
    
sato_seg_list = []
sato_conn_list = []
sato_area_list = []
sato_length_list = []
sato_jacc_list = []
for im, label in zip(im_list, label_list):
    seg = brain_seg(label, filter = 'sato')
    sato_seg_list.append(seg.astype(np.uint8))
    
    length, area, conn = vm.cal(label.astype(np.uint8), seg.astype(np.uint8))
    sato_conn_list.append(conn)
    sato_area_list.append(area)
    sato_length_list.append(length)
    sato_jacc_list.append(vm.jaccard(label, seg))
    
    
def brain_seg(im, hole_size = 50, ditzle_size = 500, thresh = 60, filter = 'meijering'):
    im = contrast_stretch(im)
    im = preprocess_seg(im)
    
    if filter == 'meijering':
        enhanced_im = meijering(im, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
    elif filter == 'sato':
        enhanced_im = sato(im, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
    elif filter == 'frangi':
        enhanced_im = frangi(im, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
    elif filter == 'jerman':
        print('jerman filter placeholder')
    norm = np.round(enhanced_im/np.max(enhanced_im)*255).astype(np.uint8)
    
    enhanced_label = np.zeros_like(norm)
    enhanced_label[norm>thresh] =1
    
    
    kernel = np.ones((6,6),np.uint8)
    label = cv2.morphologyEx(enhanced_label.astype(np.uint8), cv2.MORPH_OPEN, kernel)
    
    _, label = fill_holes(label.astype(np.uint8),hole_size)
    label = remove_small_objects(label,ditzle_size)
    
    return label

im = im_list[0]
im = contrast_stretch(im)
im = preprocess_seg(im)

meij_im = meijering(im, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
frangi_im = frangi(im, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
frangi_norm = np.round(frangi_im/np.max(frangi_im)*255).astype(np.uint8)
    