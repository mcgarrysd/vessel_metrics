#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 13 08:20:54 2022

vm_methods_figure

@author: sean
"""

import cv2
import matplotlib.pyplot as plt
import numpy as np
import vessel_metrics as vm
import glob, os
from cv2_rolling_ball import subtract_background_rolling_ball
from skimage.filters import meijering, hessian, frangi, sato
from skimage.morphology import skeletonize
from copy import deepcopy

data_path = '/media/sean/0012-D687/from_home/vm_manuscript/E1_combined/'
data_list = os.listdir(data_path)

im = cv2.imread(data_path+file+'/img.png',0)
seg = vm.brain_seg(im, filter = 'frangi', thresh = 20)
skel = skeletonize(seg)
edges, bp, new_skel = vm.prune_terminal_segments(skel)
fixed_edges, fixed_bp = vm.fix_skel_artefacts(skel)
_, edge_labels = cv2.connectedComponents(fixed_edges)
vm.overlay_segmentation(im, edge_labels)
viz, diameters = vm.whole_anatomy_diameter(im, seg, edge_labels)

test_seg = 105
diam, mean_diam, viz = vm.visualize_vessel_diameter(edge_labels, test_seg, seg, im)
vm.overlay_segmentation(im, seg+edge_labels+viz*5)

plt.figure()
plt.imshow(im, cmap='gray')

im_preproc1 = vm.preprocess_seg(im)
plt.figure()
plt.imshow(im_preproc1, cmap='gray')

im_preproc2 = vm.contrast_stretch(im_preproc1)
plt.imshow(im_preproc2, cmap = 'gray')

enhanced_im = frangi(im_preproc2, sigmas = range(1,10,2), mode = 'reflect', black_ridges = False)
plt.imshow(enhanced_im, cmap = 'gray')

vm.overlay_segmentation(im, seg)

#############################################################
skel = skeletonize(seg)
edges, bp = vm.find_branchpoints(skel)
edges, bp, new_skel = vm.prune_terminal_segments(skel)
fixed_edges, fixed_bp = vm.fix_skel_artefacts(new_skel)
_, edge_labels = cv2.connectedComponents(fixed_edges)

vm.overlay_segmentation(im, skel)
vm.overlay_segmentation(im, edges+bp*2)
